%% https://codelab.interviewbit.com/problems/zigzagtree/
-module(zigzagtree).

-export([start/0]).


start() ->
    test(nil, []),
    test({1, nil, nil}, [[1]]),
    test({1, {2, nil, nil}, {3, nil, nil}},
         [[1], [3, 2]]),
    test({1,
          {2,
           {4, nil, nil},
           {5, nil, nil}},
          {3,
           {6, nil, nil},
           {7, nil, nil}}},
         [[1], [3, 2], [4, 5, 6, 7]]),
    test({1,
          {2,
           {4,
            {8, nil, nil},
            nil
           },
           {5, nil, nil}},
          {3,
           {6, nil, nil},
           {7,
            {9, nil, nil},
            {10, nil, nil}
           }
          }
         },
         [[1],
          [3, 2],
          [4, 5, 6, 7],
          [10, 9, 8]]),
    test(fbcommon:tree_from_list(
           [129,97,98,93,106,27,61,-1,173,40,78,22,152,99,114,47,69,-1,-1,110,144,14,56,165,174,49,1,57,126,123,100,30,-1,-1,-1,161,13,139,2,85,128,119,177,-1,169,135,77,112,50,17,140,138,58,-1,-1,105,-1,-1,-1,-1,70,-1,-1,102,-1,-1,103,-1,176,-1,-1,115,132,154,125,5,-1,108,36,32,7,-1,-1,148,-1,153,16,130,72,-1,-1,95,116,48,104,-1,-1,20,156,-1,-1,88,-1,142,175,-1,64,133,83,94,-1,4,71,101,-1,-1,-1,-1,42,-1,-1,-1,-1,134,166,28,92,33,82,74,45,-1,-1,168,-1,9,-1,44,26,-1,-1,170,6,-1,-1,89,143,160,-1,68,178,111,167,-1,109,151,-1,-1,-1,81,23,-1,-1,-1,-1,-1,-1,66,11,10,179,15,96,-1,127,18,163,-1,-1,24,29,-1,-1,-1,-1,-1,34,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,118,-1,31,-1,35,-1,37,-1,122,162,3,-1,-1,-1,121,59,-1,-1,-1,19,158,157,-1,171,84,46,149,-1,-1,-1,-1,76,147,54,150,-1,-1,-1,-1,63,62,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,86,43,55,-1,-1,-1,-1,172,120,-1,-1,91,155,8,107,-1,-1,-1,164,-1,-1,113,-1,73,137,-1,-1,39,-1,-1,41,-1,-1,-1,75,146,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90,-1,145,-1,-1,117,51,-1,-1,136,-1,79,80,-1,53,52,-1,-1,-1,159,-1,-1,-1,60,-1,-1,-1,131,-1,38,12,-1,-1,-1,-1,124,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,67,65,-1,87,-1,25,-1,141,-1,-1,-1,-1]),
         [[129],[98,97],[93,106,27,61],[114,99,152,22,78,40,173],[47,69,110,144,14,56,165,174,49,1,57,126],[58,138,140,17,50,112,77,135,169,177,119,128,85,2,139,13,161,30,100,123],[105,70,102,103,176,115,132,154,125,5,108,36,32,7,148,153,16,130,72,95,116],[168,45,74,82,33,92,28,166,134,42,101,71,4,94,83,133,64,175,142,88,156,20,104,48],[9,44,26,170,6,89,143,160,68,178,111,167,109,151,81,23,66,11,10,179,15,96,127,18,163,24,29],[150,54,147,76,149,46,84,171,157,158,19,59,121,3,162,122,37,35,31,118,21,34],[63,62,86,43,55,172,120,91,155,8,107,164,113,73,137,39],[80,79,136,51,117,145,90,146,75,41],[53,52,159,60,131,38,12],[124],[67,65],[25,87],[141]]),
    ok.


test(Tree, Expect) ->
    fbcommon:test(Tree, Expect, zigzag(Tree)).


%% nil | {Val, Left, Right}
zigzag(Tree) ->
    zigzag([Tree], [], [], true).


zigzag([nil | Rest], Values, Next, RTL) ->
    zigzag(Rest, Values, Next, RTL);
zigzag([{Val, Left, Right} | Rest], Values, Next, RTL) ->
    case RTL of
        true ->
            zigzag(Rest, [Val | Values], [Right, Left | Next], RTL);
        false ->
            zigzag(Rest, [Val | Values], [Left, Right | Next], RTL)
    end;
zigzag([], Values, Next, Forward) when Next =/= [] ->
    [lists:reverse(Values) | zigzag(Next, [], [], not Forward)];
zigzag([], [], [], _) ->
    [].
